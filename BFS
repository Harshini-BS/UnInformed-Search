
from collections import deque




class Node:
    def __init__(self, value):
        self.data = value
        self.left = None
        self.right = None




def bfs(root):
    if not root:
        return


    queue = deque()
    queue.append(root)
    result = []


    while queue:
        node = queue.popleft()
        result.append(str(node.data))  # Store value as string


        if node.left:
            queue.append(node.left)
        if node.right:
            queue.append(node.right)




    print("->".join(result))




root = Node(1)
root.left = Node(2)
root.right = Node(3)
root.left.left = Node(4)
root.left.right = Node(5)
root.right.right = Node(6)


print("BFS (Level Order Traversal):")
bfs(root)



OUTPUT:


BFS (Level Order Traversal):
1->2->3->4->5->6
